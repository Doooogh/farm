server:
  port: 8080

spring:
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/auth/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                key-resolver: "#{@ipKeyResolver}"
            - name: CircuitBreaker
              args:
                name: authFallback
                fallbackUri: forward:/fallback
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/users/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                key-resolver: "#{@ipKeyResolver}"
            - name: CircuitBreaker
              args:
                name: userFallback
                fallbackUri: forward:/fallback
  main:
    web-application-type: reactive

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://auth-service
          jwk-set-uri: http://auth-service/oauth2/jwks
          
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT:16379}
    password: ${REDIS_PASSWORD:}
    database: ${REDIS_DATABASE:0}
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: DEBUG 