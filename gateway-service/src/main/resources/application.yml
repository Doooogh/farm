server:
  port: ${server.ports.gateway-service}

spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/auth/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                key-resolver: "#{@ipKeyResolver}"
            - name: CircuitBreaker
              args:
                name: authFallback
                fallbackUri: forward:/fallback
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/users/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                key-resolver: "#{@ipKeyResolver}"
            - name: CircuitBreaker
              args:
                name: userFallback
                fallbackUri: forward:/fallback
  profiles:
    active: ${spring.profiles.active:dev}
  nacos:
    discovery:
      enabled: true
    server-addr: ${nacos.host}:${nacos.port}
    namespace: ${nacos.namespace:}
    group: ${nacos.group:DEFAULT_GROUP}
        
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://auth-service
          jwk-set-uri: http://auth-service/oauth2/jwks
          
  redis:
    host: @redis.host@
    port: 6379
    password: @redis.password@
    database: 0

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: DEBUG 